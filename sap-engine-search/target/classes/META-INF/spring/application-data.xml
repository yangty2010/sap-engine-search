<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       	http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository.xsd
       	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- Spring Data JPA的扫描器，com.neusoft.saca.snap.mytest.springdata4jpa.MytestJPARepoImpl -->
	<jpa:repositories base-package="com.neusoft.saca.snap, com.neusoft.saca.snap.file, com.neusoft.saca.snap.infrastructure.util, com.neusoft.saca.snap.infrastructure.spring"
		entity-manager-factory-ref="engineEntityManagerFactory"
		transaction-manager-ref="transactionManager">
		<repository:include-filter type="regex"
			expression=".*.*JpaRepo" />
	</jpa:repositories>

	<!-- 这里可让@Transcational注解生效 -->
	<tx:annotation-driven />

	<bean id="engineEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- TODO:指定了 persistenceUnitName,那么这个配置就好像无效了-->
		<!-- <property name="packagesToScan" value="com.neusoft.saca.snap.engine.domain" /> -->
		<property name="persistenceUnitName" value="enginePersistenceUnit" />
		<!-- <property name="persistenceUnitManager" ref="persistenceUnitManager" /> -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${engine.hibernate.sql.dialect}" />
				<property name="generateDdl" value="${engine.hibernate.sql.generateddl}" />
				<property name="showSql" value="${engine.hibernate.sql.show}" />
			</bean>
		</property>
		<property name="dataSource" ref="engineDataSource" />
	</bean>

	<!-- transactionManager默认事务管理器的名称，当@Transcational注解没有参数时就是用这个 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<qualifier value="transactionManager" />
		<property name="entityManagerFactory" ref="engineEntityManagerFactory" />
	</bean>

	<bean id="engineDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${engine.jdbc.driverclass}" />
		<property name="jdbcUrl" value="${engine.jdbc.url}" />
		<property name="user" value="${engine.jdbc.username}" />
		<property name="password" value="${engine.jdbc.password}" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${engine.pool.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${engine.pool.maxPoolSize}" />
		<!--初始化时获取多少个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${engine.pool.initialPoolSize}" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${engine.pool.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${engine.pool.acquireIncrement}" />
		<property name="maxStatements" value="${engine.pool.maxStatements}" />
		<!--每隔多少秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod"
			value="${engine.pool.idleConnectionTestPeriod}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${engine.pool.acquireRetryAttempts}" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大，请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
</beans>