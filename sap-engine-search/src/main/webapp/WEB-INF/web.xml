<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>snap-file</display-name>
	
	<!-- 指定站台是否可分布式处理 -->
	<distributable/>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
            classpath:META-INF/spring/application-context.xml,
<!--             classpath:META-INF/spring/mongodb-context.xml, -->
            classpath:META-INF/spring/application-data.xml,
            classpath:META-INF/spring/application-redis.xml
        </param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<!-- ====================================================================== -->
	<!-- Listeners -->
	<!-- ====================================================================== -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 将HTTP request对象绑定到为该请求提供服务的Thread，使得具有request和session作用域的bean能够在后面的调用链中被访问到 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- ====================================================================== -->
	<!-- Filters -->
	<!-- ====================================================================== -->

	<!-- license filter -->
	<filter>
		<filter-name>licenseFilter</filter-name>
		<filter-class>com.neusoft.saca.snap.infrastructure.license.LicenseFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>licenseFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 编码过滤器放在安全过滤器之前，避免乱码出现 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- ====================================================================== -->
	<!-- Servlets -->
	<!-- ====================================================================== -->
	<servlet>
		<init-param>
			<param-name>dispatchOptionsRequest</param-name>
			<param-value>true</param-value>
		</init-param>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
</web-app>